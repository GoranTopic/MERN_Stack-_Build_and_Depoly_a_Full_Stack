var groupEnd = console.groupEnd || dummy;
		return message;
module.exports.groupEnd = logGroup(groupEnd);
	var stack = err.stack;
		return message + "\n" + stack;
var logLevel = "info";
module.exports.formatError = function(err) {
	} else if (stack.indexOf(message) < 0) {
	var shouldLog =
	}
	}
	return function(level, msg) {
	if (!stack) {
	if (shouldLog(level)) {
module.exports.group = logGroup(group);
			logFn(msg);
module.exports.groupCollapsed = logGroup(groupCollapsed);
function dummy() {}
	} else {
			console.error(msg);
		(["info", "warning", "error"].indexOf(logLevel) >= 0 && level === "error");
	logLevel = level;










function shouldLog(level) {
}
}
		if (level === "info") {
	return shouldLog;
			console.log(msg);
module.exports.setLogLevel = function(level) {
		if (shouldLog(level)) {
};
};
};
function logGroup(logFn) {
	var message = err.message;
/* eslint-disable node/no-unsupported-features/node-builtins */
		}
		}
		(logLevel === "info" && level === "info") ||
		return stack;
/* eslint-enable node/no-unsupported-features/node-builtins */
		} else if (level === "warning") {
module.exports = function(level, msg) {
		(["info", "warning"].indexOf(logLevel) >= 0 && level === "warning") ||
var group = console.group || dummy;
var groupCollapsed = console.groupCollapsed || dummy;
	};
			console.warn(msg);
		} else if (level === "error") {
