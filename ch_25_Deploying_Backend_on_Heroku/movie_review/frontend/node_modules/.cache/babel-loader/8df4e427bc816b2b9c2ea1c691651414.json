{"ast":null,"code":"var _jsxFileName = \"/home/telix/MERN_Stack_Build_and_Depoly_a_Full_Stack/ch_20_Login_Component/movie_review/frontend/src/components/movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MovieDataService from '../services/movies';\nimport { Link } from 'react-router-dom'; // bootstrap import \n\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Media from 'react-bootstrap/Media'; // import moment lib\n\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = props => {\n  _s();\n\n  const [movie, setMovie] = useState({\n    id: null,\n    title: \"\",\n    rated: \"\",\n    reviews: []\n  });\n  useEffect( // run everytime the props params changes\n  () => {\n    getMovie(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const getMovie = id => {\n    MovieDataService.get(id).then(response => {\n      setMovie(response.data);\n      console.log(\"queried data from db\");\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const renderReview = (review, index) => {\n    return /*#__PURE__*/_jsxDEV(Media, {\n      children: /*#__PURE__*/_jsxDEV(Media.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          children: [review.name + \"reviewed on \", moment(review.date).format(\"Do MMMM YYYY\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", review.review, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), props.user && props.user.id === review.user_id && /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: {\n                pathname: \"/movies/\" + props.match.params.id + \"/review\",\n                state: {\n                  currentReview: review\n                }\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"link\",\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            fluid: true,\n            src: movie.poster + \"/100px250\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              as: \"h5\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), props.user && /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/movies/\" + props.match.params.id + \"review\",\n                children: \"Add Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), movie.reviews.map(renderReview)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"vXY4IQXUPtmisNy3Y5ALXiLcHao=\");\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/home/telix/MERN_Stack_Build_and_Depoly_a_Full_Stack/ch_20_Login_Component/movie_review/frontend/src/components/movie.js"],"names":["React","useState","useEffect","MovieDataService","Link","Card","Container","Image","Col","Row","Button","Media","moment","Movie","props","movie","setMovie","id","title","rated","reviews","getMovie","match","params","get","then","response","data","console","log","catch","e","renderReview","review","index","name","date","format","user","user_id","pathname","state","currentReview","poster","map"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport MovieDataService from '../services/movies';\nimport { Link } from 'react-router-dom';\n\n// bootstrap import \nimport Card from  'react-bootstrap/Card';\nimport Container from  'react-bootstrap/Container';\nimport Image from  'react-bootstrap/Image';\nimport Col from  'react-bootstrap/Col';\nimport Row from  'react-bootstrap/Row';\nimport Button from  'react-bootstrap/Button';\nimport Media from 'react-bootstrap/Media';\n\n// import moment lib\nimport moment from 'moment';\n\n\nconst Movie = props => {\n\t\tconst [ movie, setMovie ] = useState({ id: null, title:\"\", rated:\"\", reviews: [] });\n\n\t\tuseEffect( // run everytime the props params changes\n\t\t\t\t() => { getMovie(props.match.params.id) }, \n\t\t\t\t[props.match.params.id]\n\t\t);\n\n\t\tconst getMovie = id =>{\n\t\t\t\tMovieDataService.get(id)\n\t\t\t\t\t\t.then(response => {  \n\t\t\t\t\t\t\t\tsetMovie(response.data);\n\t\t\t\t\t\t\t\tconsole.log(\"queried data from db\");\n\t\t\t\t\t\t\t\tconsole.log(response.data);\n\t\t\t\t\t\t}).catch(e => {console.log(e)});\n\t\t}\n\n\t\n\t\tconst renderReview = (review, index) => {\n\t\t\t\treturn( \n\t\t\t\t\t\t<Media key={index}>\n\t\t\t\t\t\t\t\t<Media.Body>\n\t\t\t\t\t\t\t\t\t\t<h5> \n\t\t\t\t\t\t\t\t\t\t\t\t{review.name + \"reviewed on \"} \n\t\t\t\t\t\t\t\t\t\t\t\t{moment(review.date).format(\"Do MMMM YYYY\")}\n\t\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t\t<p> {review.review} </p>\n\t\t\t\t\t\t\t\t\t\t{ props.user && \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tprops.user.id === review.user_id && \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Row> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Link to={{ \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpathname:\"/movies/\" + props.match.params.id + \"/review\", \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentReview: review\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEdit\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"link\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Row> \n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t</Media.Body>\n\t\t\t\t\t\t</Media>\n\t\t\t\t);\n\t\t}\n\n\n\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col> \n\t\t\t\t\t\t\t\t\t\t\t\t<Image fluid src={movie.poster+\"/100px250\"}/>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Header as=\"h5\">{movie.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{props.user && <Link \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={\"/movies/\" + props.match.params.id +\"review\" }> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Review\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t\t\t\t<h2>Reviews</h2>\n\t\t\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\t\t\t{ movie.reviews.map(renderReview) }\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t);\n\n}\n\n\nexport default Movie;\t\n"]},"metadata":{},"sourceType":"module"}