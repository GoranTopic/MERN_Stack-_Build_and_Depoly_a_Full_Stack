{"ast":null,"code":"var _jsxFileName = \"/home/telix/MERN_Stack_Build_and_Depoly_a_Full_Stack/ch_18_Movie_Component/movie_review/frontend/src/components/movie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MovieDataService from '../services/movies';\nimport { Link } from 'react-router-dom'; // bootstrap import \n\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Media from 'react-bootstrap/Media';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Movie = props => {\n  _s();\n\n  const [movie, setMovie] = useState({\n    id: null,\n    title: \"\",\n    rated: \"\",\n    reviews: []\n  });\n  useEffect( // run everytime the props params changes\n  () => {\n    getMovie(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const getMovie = id => {\n    MovieDataService.get(id).then(response => {\n      setMovie(response.data);\n      console.log(\"queried data from db\");\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Image, {\n            fluid: true,\n            src: movie.poster + \"/100px250\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n              as: \"h5\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), props.user && /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/movies/\" + props.match.params.id + \"review\",\n                children: \"Add Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Movie, \"vXY4IQXUPtmisNy3Y5ALXiLcHao=\");\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/home/telix/MERN_Stack_Build_and_Depoly_a_Full_Stack/ch_18_Movie_Component/movie_review/frontend/src/components/movie.js"],"names":["React","useState","useEffect","MovieDataService","Link","Card","Container","Image","Col","Row","Button","Media","Movie","props","movie","setMovie","id","title","rated","reviews","getMovie","match","params","get","then","response","data","console","log","catch","e","poster","user"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CAEA;;AACA,OAAOC,IAAP,MAAkB,sBAAlB;AACA,OAAOC,SAAP,MAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAmB,uBAAnB;AACA,OAAOC,GAAP,MAAiB,qBAAjB;AACA,OAAOC,GAAP,MAAiB,qBAAjB;AACA,OAAOC,MAAP,MAAoB,wBAApB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IAAI;AAAA;;AACrB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBd,QAAQ,CAAC;AAAEe,IAAAA,EAAE,EAAE,IAAN;AAAYC,IAAAA,KAAK,EAAC,EAAlB;AAAsBC,IAAAA,KAAK,EAAC,EAA5B;AAAgCC,IAAAA,OAAO,EAAE;AAAzC,GAAD,CAApC;AAEAjB,EAAAA,SAAS,EAAE;AACT,QAAM;AAAEkB,IAAAA,QAAQ,CAACP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBN,EAApB,CAAR;AAAiC,GADlC,EAEP,CAACH,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBN,EAApB,CAFO,CAAT;;AAKA,QAAMI,QAAQ,GAAGJ,EAAE,IAAG;AACpBb,IAAAA,gBAAgB,CAACoB,GAAjB,CAAqBP,EAArB,EACGQ,IADH,CACQC,QAAQ,IAAI;AAChBV,MAAAA,QAAQ,CAACU,QAAQ,CAACC,IAAV,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACC,IAArB;AACD,KALH,EAKKG,KALL,CAKWC,CAAC,IAAI;AAACH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AAAe,KALhC;AAMD,GAPD;;AASA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAA,6BACE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,GAAG,EAAEhB,KAAK,CAACiB,MAAN,GAAa;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,GAAD;AAAA,kCACE,QAAC,IAAD;AAAA,oCACE,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,EAAE,EAAC,IAAhB;AAAA,wBAAsBjB,KAAK,CAACG;AAA5B;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE,QAAC,IAAD,CAAM,IAAN;AAAA,sCACE,QAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA,sBADF,EAGGJ,KAAK,CAACmB,IAAN,iBAAc,QAAC,IAAD;AACb,gBAAA,EAAE,EAAE,aAAanB,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBN,EAAhC,GAAoC,QAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD,CAjDD;;GAAMJ,K;;KAAAA,K;AAoDN,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport MovieDataService from '../services/movies';\nimport { Link } from 'react-router-dom';\n\n// bootstrap import \nimport Card from  'react-bootstrap/Card';\nimport Container from  'react-bootstrap/Container';\nimport Image from  'react-bootstrap/Image';\nimport Col from  'react-bootstrap/Col';\nimport Row from  'react-bootstrap/Row';\nimport Button from  'react-bootstrap/Button';\nimport Media from 'react-bootstrap/Media';\n\nconst Movie = props => {\n\t\tconst [ movie, setMovie ] = useState({ id: null, title:\"\", rated:\"\", reviews: [] });\n\n\t\tuseEffect( // run everytime the props params changes\n\t\t\t\t() => { getMovie(props.match.params.id) }, \n\t\t\t\t[props.match.params.id]\n\t\t);\n\n\t\tconst getMovie = id =>{\n\t\t\t\tMovieDataService.get(id)\n\t\t\t\t\t\t.then(response => {  \n\t\t\t\t\t\t\t\tsetMovie(response.data);\n\t\t\t\t\t\t\t\tconsole.log(\"queried data from db\");\n\t\t\t\t\t\t\t\tconsole.log(response.data);\n\t\t\t\t\t\t}).catch(e => {console.log(e)});\n\t\t}\n\n\t\treturn(\n\t\t\t\t<div>\n\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t<Col> \n\t\t\t\t\t\t\t\t\t\t\t\t<Image fluid src={movie.poster+\"/100px250\"}/>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Header as=\"h5\">{movie.title}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Header>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Card.Text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Text>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{props.user && <Link \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tto={\"/movies/\" + props.match.params.id +\"review\" }> \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Review\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Link> }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t\t\t\t\t\t\t<br></br>\n\t\t\t\t\t\t\t\t\t\t\t\t<h2>Reviews</h2>\n\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Container>\n\t\t\t\t</div>\n\t\t);\n\t\t\n\n\n\n\n}\n\n\nexport default Movie;\t\n"]},"metadata":{},"sourceType":"module"}