{"ast":null,"code":"var _jsxFileName = \"/home/telix/MERN_Stack_Build_and_Depoly_a_Full_Stack/ch_19_Listing_reviews/movie_review/frontend/src/components/movies-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MovieDataService from \"../services/movies\";\nimport { Link } from \"react-router-dom\"; // bootstrap import \n\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MoviesList = props => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [searchTitle, setSearchTitle] = useState(\"\");\n  const [searchRating, setSearchRating] = useState(\"\");\n  const [ratings, setRatings] = useState([\"All Ratings\"]);\n  useEffect(() => {\n    // run after the components have rendered once,\n    //  if we dont pass the second argument useEffect \n    //  is run on every render \n    retrieveMovies();\n    retrieveRatings();\n  }, []);\n\n  const retrieveMovies = () => {\n    MovieDataService.getAll() // movie Data service returns a promise\n    .then(response => {\n      // after fetching data\n      console.log(response.data);\n      setMovies(response.data.movies); // set date in hook\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const retrieveRatings = () => {\n    MovieDataService.getRatings().then(response => {\n      console.log(response.data); // start with all ratings \n\n      setRatings([\"All Ratings\"].concat(response.data)); // add fetched ratings?\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const onChangeSearchTitle = e => {\n    // get value from input bar\n    const searchTitle = e.target.value;\n    setSearchTitle(searchTitle);\n  };\n\n  const onChangeSearchRatings = e => {\n    const searchRating = e.target.value;\n    console.log(e.target);\n    console.log(\"rating changed:\");\n    console.log(searchRating);\n    setSearchRating(searchRating);\n  };\n\n  const find = (query, by) => {\n    MovieDataService.find(query, by).then(response => {\n      console.log(\"found movies:\");\n      console.log(response.data.movies);\n      setMovies(response.data.movies);\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n\n  const findByTitle = () => {\n    find(searchTitle, \"title\");\n  };\n\n  const findByRating = () => {\n    if (searchRating === \"All Ratings\") {\n      retrieveMovies();\n    } else {\n      find(searchRating, \"rated\");\n    }\n  };\n\n  const renderMovieCard = (movie, key) => /*#__PURE__*/_jsxDEV(Col, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          width: '18rem'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n          src: movie.poster + \"/100px180\",\n          alt: \"poster not found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\" Year: \", movie.year, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [\" Rating: \", movie.rated, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: movie.plot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/movies/\" + movies._id,\n            children: \"View Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Search by title\",\n                value: searchTitle,\n                onChange: onChangeSearchTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"button\",\n              onClick: findByTitle,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                onChange: onChangeSearchRatings,\n                children: ratings.map(rating => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: rating,\n                  children: rating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 35\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"button\",\n              onClick: findByRating,\n              children: \"search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: movies.map(renderMovieCard)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MoviesList, \"sFgGPeX292ejoLNTouafvQty/AY=\");\n\n_c = MoviesList;\nexport default MoviesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesList\");","map":{"version":3,"sources":["/home/telix/MERN_Stack_Build_and_Depoly_a_Full_Stack/ch_19_Listing_reviews/movie_review/frontend/src/components/movies-list.js"],"names":["React","useState","useEffect","MovieDataService","Link","Container","Button","Form","Row","Col","Card","MoviesList","props","movies","setMovies","searchTitle","setSearchTitle","searchRating","setSearchRating","ratings","setRatings","retrieveMovies","retrieveRatings","getAll","then","response","console","log","data","catch","e","getRatings","concat","onChangeSearchTitle","target","value","onChangeSearchRatings","find","query","by","findByTitle","findByRating","renderMovieCard","movie","key","width","poster","title","year","rated","plot","_id","map","rating"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MovieDataService from \"../services/movies\";\nimport { Link } from \"react-router-dom\";\n\n// bootstrap import \nimport Container from  'react-bootstrap/Container';\nimport Button from  'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Row from  'react-bootstrap/Row';\nimport Col from  'react-bootstrap/Col';\nimport Card from  'react-bootstrap/Card';\n\nconst MoviesList = props => {\n\t\tconst [ movies, setMovies ] = useState([]);\n\t\tconst [ searchTitle, setSearchTitle ] = useState(\"\");\n\t\tconst [ searchRating, setSearchRating ] = useState(\"\");\n\t\tconst [ ratings, setRatings ] = useState([\"All Ratings\"]);\n\t\t\n\t\tuseEffect(() => {\n\t\t\t\t// run after the components have rendered once,\n\t\t\t\t//  if we dont pass the second argument useEffect \n\t\t\t\t//  is run on every render \n\t\t\t\tretrieveMovies();\n\t\t\t\tretrieveRatings();\n\t\t}, []);\n\n\t\tconst retrieveMovies = () =>{\n\t\t\t\tMovieDataService.getAll() // movie Data service returns a promise\n\t\t\t\t\t\t.then(response => { // after fetching data\n\t\t\t\t\t\t\t\tconsole.log(response.data);\n\t\t\t\t\t\t\t\tsetMovies(response.data.movies); // set date in hook\n\t\t\t\t\t\t}).catch(e => {console.log(e)});\n\t\t}\n\n\t\tconst retrieveRatings = () =>{\n\t\t\t\tMovieDataService.getRatings()\n\t\t\t\t\t\t.then(response => {\n\t\t\t\t\t\t\t\tconsole.log(response.data); // start with all ratings \n\t\t\t\t\t\t\t\tsetRatings([\"All Ratings\"].concat(response.data)); // add fetched ratings?\n\t\t\t\t\t\t}).catch(e => { console.log(e) });\n\t\t}\n\n\t\tconst onChangeSearchTitle = e => {\n\t\t\t\t// get value from input bar\n\t\t\t\tconst searchTitle = e.target.value;\n\t\t\t\tsetSearchTitle(searchTitle);\n\t\t}\n\n\n\t\tconst onChangeSearchRatings = e => {\n\t\t\t\tconst searchRating = e.target.value;\n\t\t\t\tconsole.log(e.target);\n\t\t\t\tconsole.log(\"rating changed:\");\n\t\t\t\tconsole.log(searchRating);\n\t\t\t\tsetSearchRating(searchRating);\n\t\t}\n\n\t\tconst find = (query, by) => {\n\t\t\t\tMovieDataService.find(query, by)\n\t\t\t\t\t\t.then(response => {  \n\t\t\t\t\t\t\t\tconsole.log(\"found movies:\");\n\t\t\t\t\t\t\t\tconsole.log(response.data.movies);\n\t\t\t\t\t\t\t\tsetMovies(response.data.movies);\n\t\t\t\t\t\t}).catch(e => { console.log(e) });\n\t\t}\n\n\t\tconst findByTitle = () =>{\n\t\t\t\tfind(searchTitle, \"title\");\n\t\t}\n\n\t\tconst findByRating = () => {\n\t\t\t\tif(searchRating === \"All Ratings\"){\n\t\t\t\t\t\tretrieveMovies();\n\t\t\t\t}else{\n\t\t\t\t\t\tfind(searchRating, \"rated\");\n\t\t\t\t}\n\t\t}\n\n\t\tconst renderMovieCard = (movie, key) =>\n\t\t\t\t<Col>\n\t\t\t\t\t\t<div key={key}>\n\t\t\t\t\t\t\t\t<Card style={{ width:'18rem' }}>\n\t\t\t\t\t\t\t\t\t\t<Card.Img src={movie.poster + \"/100px180\"} alt=\"poster not found\"/>\n\t\t\t\t\t\t\t\t\t\t<Card.Body>\n\t\t\t\t\t\t\t\t\t\t\t\t<Card.Title>{movie.title}</Card.Title>\n\t\t\t\t\t\t\t\t\t\t\t\t<Card.Text> Year: {movie.year} </Card.Text>\n\t\t\t\t\t\t\t\t\t\t\t\t<Card.Text> Rating: {movie.rated} </Card.Text>\n\t\t\t\t\t\t\t\t\t\t\t\t<Card.Text>{movie.plot}</Card.Text>\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to={\"/movies/\"+movies._id}>View Reviews</Link>\n\t\t\t\t\t\t\t\t\t\t</Card.Body>\n\t\t\t\t\t\t\t\t</Card>\n\t\t\t\t\t\t</div>\n\t\t\t\t</Col>\n\n\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t\t\t\t\t<Container>\n\t\t\t\t\t\t\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control type=\"text\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Search by title\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={searchTitle}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeSearchTitle}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"button\" onClick={findByTitle}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control as=\"select\" \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={onChangeSearchRatings}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ratings.map(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trating => <option value={rating}>{rating}</option>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Control>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"primary\" type=\"button\" onClick={findByRating}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsearch\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{movies.map(renderMovieCard)}\n\t\t\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t);\n}\n\nexport default MoviesList;\t\n"]},"metadata":{},"sourceType":"module"}